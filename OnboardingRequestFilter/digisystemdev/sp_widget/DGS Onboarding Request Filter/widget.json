{
    "instance": {
        "name": "digisystemdev",
        "url": "https://digisystemdev.service-now.com",
        "g_ck": "bc6089ca1b6a451056252fc13b4bcbfc155509ec525c116c89bc8c7af9715c9422ffc2ea"
    },
    "action": "saveWidget",
    "tableName": "sp_widget",
    "name": "DGS: Onboarding Request Filter",
    "sys_id": "42ec43b01bda8510f087a79fe54bcbce",
    "widget": {
        "template": {
            "sys_mandatory": false,
            "visible": true,
            "dbType": -1,
            "label": "Body HTML template",
            "sys_readonly": false,
            "type": "html_template",
            "mandatory": false,
            "displayValue": "<section class=\"filter-section\" ng-init=\"c.init()\">\n  <div class=\"box\">\n\n\n\n    <div class=\"filter-field\">\n      <label>${Filter by}</label>\n      <sn-choice-list sn-model=\"c.selectorGroup\" \n                      sn-options=\"c.selectOptions\" \n                      sn-value-field=\"value\"  \n                      sn-text-field=\"label\"  \n                      sn-items=\"c.data.filter_group\" \n                      sn-on-change=\"c.selectFilterGroup()\">\n      </sn-choice-list>\n      <br>\n      <sn-choice-list sn-model=\"c.selectorState\" \n                      sn-options=\"c.selectOptions\" \n                      sn-value-field=\"value\"  \n                      sn-text-field=\"label\"  \n                      sn-items=\"c.data.search_selector\" \n                      sn-on-change=\"c.selectFilter()\">\n      </sn-choice-list>\n    </div>\n\n    <div class=\"requests\">\n      <div class=\"title\">\n        <label>${Requests}</label>\n      </div>\n      <div class=\"request-list\">\n\n        <div class=\"request-item\" \n             ng-repeat=\"item in c.data.list\" \n             ng-class=\"{'active': c.selected == item.sys_id}\"\n             ng-click=\"c.selected = item.sys_id; c.setRecord(item)\">\n          <span class=\"title-request\">\n            {{item.title}}\n          </span>\n          <div class=\"display_value\" ng-repeat=\"field in item.fields\">\n            <div ng-switch=\"field.type\">\n              <div ng-switch-when=\"glide_date_time\">\n                {{field.display_value.slice(0, 10) | date: 'dd/MM/yyyy'}}\n              </div>\n              <div ng-switch-default>\n                {{field.display_value}}\n              </div>\n            </div>\n          </div>\n\n        </div>\n\n        <div class=\"no-results\" ng-if=\"c.data.list.length == 0\">\n          ${No have requests}\n        </div>\n      </div>\n    </div>\n\n\n\n  </div>\n</section>",
            "readonly": false,
            "hint": "",
            "name": "template",
            "attributes": {},
            "choice": 0,
            "value": "<section class=\"filter-section\" ng-init=\"c.init()\">\n  <div class=\"box\">\n\n\n\n    <div class=\"filter-field\">\n      <label>${Filter by}</label>\n      <sn-choice-list sn-model=\"c.selectorGroup\" \n                      sn-options=\"c.selectOptions\" \n                      sn-value-field=\"value\"  \n                      sn-text-field=\"label\"  \n                      sn-items=\"c.data.filter_group\" \n                      sn-on-change=\"c.selectFilterGroup()\">\n      </sn-choice-list>\n      <br>\n      <sn-choice-list sn-model=\"c.selectorState\" \n                      sn-options=\"c.selectOptions\" \n                      sn-value-field=\"value\"  \n                      sn-text-field=\"label\"  \n                      sn-items=\"c.data.search_selector\" \n                      sn-on-change=\"c.selectFilter()\">\n      </sn-choice-list>\n    </div>\n\n    <div class=\"requests\">\n      <div class=\"title\">\n        <label>${Requests}</label>\n      </div>\n      <div class=\"request-list\">\n\n        <div class=\"request-item\" \n             ng-repeat=\"item in c.data.list\" \n             ng-class=\"{'active': c.selected == item.sys_id}\"\n             ng-click=\"c.selected = item.sys_id; c.setRecord(item)\">\n          <span class=\"title-request\">\n            {{item.title}}\n          </span>\n          <div class=\"display_value\" ng-repeat=\"field in item.fields\">\n            <div ng-switch=\"field.type\">\n              <div ng-switch-when=\"glide_date_time\">\n                {{field.display_value.slice(0, 10) | date: 'dd/MM/yyyy'}}\n              </div>\n              <div ng-switch-default>\n                {{field.display_value}}\n              </div>\n            </div>\n          </div>\n\n        </div>\n\n        <div class=\"no-results\" ng-if=\"c.data.list.length == 0\">\n          ${No have requests}\n        </div>\n      </div>\n    </div>\n\n\n\n  </div>\n</section>",
            "max_length": 65000,
            "ed": {
                "name": "template"
            }
        },
        "css": {
            "sys_mandatory": false,
            "visible": true,
            "dbType": -1,
            "label": "CSS",
            "sys_readonly": false,
            "type": "css",
            "mandatory": false,
            "displayValue": ".filter-section{\n  .box{\n    box-shadow: 2px -2px 10px rgba(0,0,0,0.2);\n    border-radius: 8px;\n    .filter-field{\n      padding: 16px 12px 0;\n      label{\n        font-weight: 500;\n        color: #000000;\n        font-size: 14px;\n      }\n      .select2-container{\n        .select2-arrow{\n          background-color: $btn-primary-bg;\n          color: $btn-primary-color;\n          &:before{\n            font-family: \"FontAwesome\"; \n            font-weight: 600; \n            content: \"\\f078\";\n            display: flex;\n            justify-content: center;\n          }\n        }\n      }\n      .select2-dropdown-open{\n        .select2-arrow{\n          &:before{\n            content: \"\\f077\";\n          }\n        }\n      }\n    }\n    .requests{\n      .title{\n        margin-top: 16px;\n        margin-bottom: 10px;\n        padding: 0 12px 0;\n      }\n      .request-list{\n        .request-item{\n          display: grid;\n          padding: 15px 12px;\n          border-top: 1px solid #E5E5E5;\n          grid-template-columns: 1fr;\n          .title-request{\n            color: #000000;\n          }\n          .display_value{\n            color: #8B8B8B;\n          }\n          &:last-child{\n            border-bottom-left-radius: 8px;\n            border-bottom-right-radius: 8px;\n          }\n          &:hover{\n            background-color: $action-primary-bg;\n            .title-request{\n            \tcolor: $action-primary-color;\n            }\n            .display_value{\n              color: $action-primary-color;\n              opacity: 0.7;\n            }\n          }\n        }\n        .active{\n          background-color: $action-primary-bg;\n          .title-request{\n          \t color: $action-primary-color;\n          }\n          .display_value{    \n              color: $action-primary-color;\n              opacity: 0.7;    \n          }\n        }\n        .no-results{\n          padding: 0 0 16px 12px;\n        }\n      }\n    }\n  }\n}\n\n@media screen and (max-width: 767px){\n  .request-list{\n    max-height: 400px;\n    overflow: auto;\n  }\n}\n\n",
            "readonly": false,
            "hint": "",
            "name": "css",
            "attributes": {},
            "choice": 0,
            "value": ".filter-section{\n  .box{\n    box-shadow: 2px -2px 10px rgba(0,0,0,0.2);\n    border-radius: 8px;\n    .filter-field{\n      padding: 16px 12px 0;\n      label{\n        font-weight: 500;\n        color: #000000;\n        font-size: 14px;\n      }\n      .select2-container{\n        .select2-arrow{\n          background-color: $btn-primary-bg;\n          color: $btn-primary-color;\n          &:before{\n            font-family: \"FontAwesome\"; \n            font-weight: 600; \n            content: \"\\f078\";\n            display: flex;\n            justify-content: center;\n          }\n        }\n      }\n      .select2-dropdown-open{\n        .select2-arrow{\n          &:before{\n            content: \"\\f077\";\n          }\n        }\n      }\n    }\n    .requests{\n      .title{\n        margin-top: 16px;\n        margin-bottom: 10px;\n        padding: 0 12px 0;\n      }\n      .request-list{\n        .request-item{\n          display: grid;\n          padding: 15px 12px;\n          border-top: 1px solid #E5E5E5;\n          grid-template-columns: 1fr;\n          .title-request{\n            color: #000000;\n          }\n          .display_value{\n            color: #8B8B8B;\n          }\n          &:last-child{\n            border-bottom-left-radius: 8px;\n            border-bottom-right-radius: 8px;\n          }\n          &:hover{\n            background-color: $action-primary-bg;\n            .title-request{\n            \tcolor: $action-primary-color;\n            }\n            .display_value{\n              color: $action-primary-color;\n              opacity: 0.7;\n            }\n          }\n        }\n        .active{\n          background-color: $action-primary-bg;\n          .title-request{\n          \t color: $action-primary-color;\n          }\n          .display_value{    \n              color: $action-primary-color;\n              opacity: 0.7;    \n          }\n        }\n        .no-results{\n          padding: 0 0 16px 12px;\n        }\n      }\n    }\n  }\n}\n\n@media screen and (max-width: 767px){\n  .request-list{\n    max-height: 400px;\n    overflow: auto;\n  }\n}\n\n",
            "max_length": 8000,
            "ed": {
                "name": "css"
            }
        },
        "roles": {
            "sys_mandatory": false,
            "visible": true,
            "dbType": 12,
            "label": "Roles",
            "sys_readonly": false,
            "type": "user_roles",
            "mandatory": false,
            "displayValue": "",
            "readonly": false,
            "hint": "",
            "name": "roles",
            "attributes": {
                "no_truncate": "true",
                "update_exempt": "true",
                "record_watcher_blacklist": "true"
            },
            "choice": 0,
            "value": "",
            "max_length": 255,
            "ed": {
                "name": "roles"
            }
        },
        "link": {
            "sys_mandatory": false,
            "visible": true,
            "dbType": -1,
            "label": "Link",
            "sys_readonly": false,
            "type": "script",
            "mandatory": false,
            "displayValue": "function link(scope, element, attrs, controller) {\r  \r}",
            "readonly": false,
            "hint": "",
            "name": "link",
            "attributes": {
                "client_script": "true"
            },
            "choice": 0,
            "value": "function link(scope, element, attrs, controller) {\r  \r}",
            "max_length": 65000,
            "ed": {
                "name": "link"
            }
        },
        "description": {
            "sys_mandatory": false,
            "visible": true,
            "dbType": -1,
            "label": "Description",
            "sys_readonly": false,
            "type": "string",
            "mandatory": false,
            "displayValue": "",
            "readonly": false,
            "hint": "Defines what the widget does",
            "name": "description",
            "attributes": {
                "edge_encryption_enabled": "true"
            },
            "choice": 0,
            "value": "",
            "max_length": 300,
            "ed": {
                "name": "description"
            }
        },
        "demo_data": {
            "sys_mandatory": false,
            "visible": true,
            "dbType": -1,
            "label": "Demo data",
            "sys_readonly": false,
            "type": "json",
            "mandatory": false,
            "displayValue": "",
            "readonly": false,
            "hint": "",
            "name": "demo_data",
            "attributes": {},
            "choice": 0,
            "value": "",
            "max_length": 8000,
            "ed": {
                "name": "demo_data"
            }
        },
        "option_schema": {
            "sys_mandatory": false,
            "visible": true,
            "dbType": -1,
            "label": "Option schema",
            "sys_readonly": false,
            "type": "json",
            "mandatory": false,
            "displayValue": "[{\"name\":\"display_fields\",\"section\":\"Presentation\",\"label\":\"Display Fields\",\"type\":\"field_list\"},{\"name\":\"filter\",\"section\":\"Data\",\"label\":\"Filter\",\"type\":\"string\"},{\"name\":\"enable_states_filter\",\"section\":\"Data\",\"label\":\"Enable States filter\",\"type\":\"string\"},{\"name\":\"field_filter\",\"section\":\"Data\",\"label\":\"Field Filter\",\"type\":\"field_name\"},{\"name\":\"title_variable_display\",\"section\":\"Presentation\",\"label\":\"Title Variable Display\",\"type\":\"string\"}]",
            "readonly": false,
            "hint": "",
            "name": "option_schema",
            "attributes": {},
            "choice": 0,
            "value": "[{\"name\":\"display_fields\",\"section\":\"Presentation\",\"label\":\"Display Fields\",\"type\":\"field_list\"},{\"name\":\"filter\",\"section\":\"Data\",\"label\":\"Filter\",\"type\":\"string\"},{\"name\":\"enable_states_filter\",\"section\":\"Data\",\"label\":\"Enable States filter\",\"type\":\"string\"},{\"name\":\"field_filter\",\"section\":\"Data\",\"label\":\"Field Filter\",\"type\":\"field_name\"},{\"name\":\"title_variable_display\",\"section\":\"Presentation\",\"label\":\"Title Variable Display\",\"type\":\"string\"}]",
            "max_length": 8000,
            "ed": {
                "name": "option_schema"
            }
        },
        "script": {
            "sys_mandatory": false,
            "visible": true,
            "dbType": -1,
            "label": "Server script",
            "sys_readonly": false,
            "type": "script",
            "mandatory": false,
            "displayValue": "(function() {\n\t/* populate the 'data' object */\n\t/* e.g., data.table = $sp.getValue('table'); */\n\tvar utils = new global.OnboardingPortalUtils();\n\t\n\tdata.table = input.table || options.table || $sp.getParameter('table');\n\tdata.filter = options.filter || $sp.getParameter('filter');\n\tdata.field_list = options.display_fields;\n\tdata.field_filter = options.field_filter;\n\tdata.enable_states_filter = options.enable_states_filter.split(',');\n\tdata.group_selected = parseInt($sp.getParameter('group_selected'));\n\tdata.title_variable_display = options.title_variable_display;\n\t\n\t\n\tif(!data.table || !data.field_filter)\n\t\treturn;\n\n\t/*\n\t *\tCriação do campo de pesquisa Agrupamento de Status \n\t */\n\t\n\tdata.filter_group = utils.getGroupStates(JSON.parse(gs.getProperty('onboarding.portal.group_state')));\n\t\n\tdata.enable_states = [];\n\t// Habilitar states conforme seleção do grupo\n\tif(input.interactive_filter_group){\n\t\tdata.enable_states = data.filter_group.filter(function(item, index){\n\t\t\treturn (item.value == parseInt(input.interactive_filter_group));\n\t\t});\n\t}\n\t\n\t/*\n\t * Montagem inicial do filtro\n\t */\n\tif(data.enable_states){\n\t\tdata.enable_states_filter = (data.enable_states[0].states.split(',') == 'ANYTHING') ? data.enable_states_filter : data.enable_states[0].states.split(',');\n\t\tdata.new_filter = data.filter + \"^\" + data.field_filter;\n\t\tdata.new_filter += (data.enable_states[0].states == 'ANYTHING' ) ? '' : \"IN\" + data.enable_states[0].states;\t\t\n\t}\n\n\t/*\n\t * Montagem de filtro ao selecionar os Grupos e status\n\t */\n\tif(input.interactive_filter){\n\t\t// Define o filtro inicial para retornar todos\n\t\tif(!input.interactive_filter_group || input.interactive_filter_group == 0){\n\t\t\tdata.new_filter = data.filter + \"^\" + data.field_filter;\n\t\t}\n\t\t// Aplicação do status selecionado, somado com o filtro do grupo selecionado\n\t\tdata.new_filter += (input.interactive_filter == 'ANYTHING' ) ? '^' + data.field_filter + 'ANYTHING' :  '^' + data.field_filter + \"=\" + input.interactive_filter;\n\t}\n\n\t// Caso não tenha um grupo atribuido e status definido, definir query original\n\tif(!data.new_filter)\n\t\tdata.new_filter = data.filter;\n\t\n\t/*\n\t * Criação da Lista de Solicitações\n\t */\n\tdata.list = utils.getRequestList(data.table, data.new_filter, data.field_list, data.title_variable_display);\n\t\n\t/*\n\t * Criação do campo de pesquisa de Status\n\t */\n\tdata.search_selector = utils.getChoiceList(data.table, data.field_filter, data.enable_states_filter);\n\n\n})();",
            "readonly": false,
            "hint": "",
            "name": "script",
            "attributes": {},
            "choice": 0,
            "value": "(function() {\n\t/* populate the 'data' object */\n\t/* e.g., data.table = $sp.getValue('table'); */\n\tvar utils = new global.OnboardingPortalUtils();\n\t\n\tdata.table = input.table || options.table || $sp.getParameter('table');\n\tdata.filter = options.filter || $sp.getParameter('filter');\n\tdata.field_list = options.display_fields;\n\tdata.field_filter = options.field_filter;\n\tdata.enable_states_filter = options.enable_states_filter.split(',');\n\tdata.group_selected = parseInt($sp.getParameter('group_selected'));\n\tdata.title_variable_display = options.title_variable_display;\n\t\n\t\n\tif(!data.table || !data.field_filter)\n\t\treturn;\n\n\t/*\n\t *\tCriação do campo de pesquisa Agrupamento de Status \n\t */\n\t\n\tdata.filter_group = utils.getGroupStates(JSON.parse(gs.getProperty('onboarding.portal.group_state')));\n\t\n\tdata.enable_states = [];\n\t// Habilitar states conforme seleção do grupo\n\tif(input.interactive_filter_group){\n\t\tdata.enable_states = data.filter_group.filter(function(item, index){\n\t\t\treturn (item.value == parseInt(input.interactive_filter_group));\n\t\t});\n\t}\n\t\n\t/*\n\t * Montagem inicial do filtro\n\t */\n\tif(data.enable_states){\n\t\tdata.enable_states_filter = (data.enable_states[0].states.split(',') == 'ANYTHING') ? data.enable_states_filter : data.enable_states[0].states.split(',');\n\t\tdata.new_filter = data.filter + \"^\" + data.field_filter;\n\t\tdata.new_filter += (data.enable_states[0].states == 'ANYTHING' ) ? '' : \"IN\" + data.enable_states[0].states;\t\t\n\t}\n\n\t/*\n\t * Montagem de filtro ao selecionar os Grupos e status\n\t */\n\tif(input.interactive_filter){\n\t\t// Define o filtro inicial para retornar todos\n\t\tif(!input.interactive_filter_group || input.interactive_filter_group == 0){\n\t\t\tdata.new_filter = data.filter + \"^\" + data.field_filter;\n\t\t}\n\t\t// Aplicação do status selecionado, somado com o filtro do grupo selecionado\n\t\tdata.new_filter += (input.interactive_filter == 'ANYTHING' ) ? '^' + data.field_filter + 'ANYTHING' :  '^' + data.field_filter + \"=\" + input.interactive_filter;\n\t}\n\n\t// Caso não tenha um grupo atribuido e status definido, definir query original\n\tif(!data.new_filter)\n\t\tdata.new_filter = data.filter;\n\t\n\t/*\n\t * Criação da Lista de Solicitações\n\t */\n\tdata.list = utils.getRequestList(data.table, data.new_filter, data.field_list, data.title_variable_display);\n\t\n\t/*\n\t * Criação do campo de pesquisa de Status\n\t */\n\tdata.search_selector = utils.getChoiceList(data.table, data.field_filter, data.enable_states_filter);\n\n\n})();",
            "max_length": 65000,
            "ed": {
                "name": "script"
            }
        },
        "has_preview": {
            "sys_mandatory": false,
            "visible": true,
            "dbType": -7,
            "label": "Has preview",
            "sys_readonly": false,
            "type": "boolean",
            "mandatory": false,
            "displayValue": "false",
            "readonly": false,
            "hint": "Defines whether preview data is available",
            "name": "has_preview",
            "attributes": {},
            "choice": 0,
            "value": "false",
            "max_length": 40,
            "ed": {
                "name": "has_preview"
            }
        },
        "public": {
            "sys_mandatory": false,
            "visible": true,
            "dbType": -7,
            "label": "Public",
            "sys_readonly": false,
            "type": "boolean",
            "mandatory": false,
            "displayValue": "false",
            "readonly": false,
            "hint": "Widget publicly available to unauthenticated users",
            "name": "public",
            "attributes": {
                "update_exempt": "true"
            },
            "choice": 0,
            "value": "false",
            "max_length": 40,
            "ed": {
                "name": "public"
            }
        },
        "docs": {
            "sys_mandatory": false,
            "visible": true,
            "table_attributes": {
                "update_synch": "true",
                "synch_attachments": "true"
            },
            "dbType": 12,
            "label": "Docs",
            "sys_readonly": false,
            "type": "reference",
            "mandatory": false,
            "refTable": "sp_documentation",
            "reference_type": "table",
            "displayValue": "",
            "readonly": false,
            "hint": "",
            "name": "docs",
            "attributes": {
                "encode_utf8": "false"
            },
            "reference_key": "sys_id",
            "readonlyClickthrough": false,
            "choice": 0,
            "value": "",
            "max_length": 32,
            "ed": {
                "reference": "sp_documentation",
                "searchField": "title",
                "defaultOperator": "STARTSWITH",
                "name": "docs"
            }
        },
        "client_script": {
            "sys_mandatory": false,
            "visible": true,
            "dbType": -1,
            "label": "Client controller",
            "sys_readonly": false,
            "type": "script",
            "mandatory": false,
            "displayValue": "api.controller=function($timeout, $rootScope, $scope, spUtil) {\n\t/* widget controller */\n\tvar c = this;\n\n\tc.selectOptions = {\n\t\thideSearch: true,\n\t\tallowClear: true\n\t};\n\n\tc.init = function(){\n\t\tc.selectorGroup = c.data.group_selected || 0;\n\t\tc.selectorState = null;\n\t\tif(c.data.group_selected)\n\t\t\tc.selectFilter();\n\t}\n\n\tspUtil.recordWatch($scope, c.data.table, c.options.filter, function(name) {\n\t\tc.server.update();\n\t});\n\n\tc.selectFilterGroup = function(){\n\t\t$timeout(function(){\n\t\t\tc.data.interactive_filter_group = c.selectorGroup || '0';\n\t\t\tc.data.interactive_filter = c.selectorState || 'ANYTHING';\n\t\t\tc.server.update().then(function(){\n\t\t\t\tc.selectorState = null;\n\t\t\t\tvar state = c.data.filter_group.filter(function(item, index){\n\t\t\t\t\treturn item.value === c.selectorGroup;\n\t\t\t\t});\t\n\t\t\t\tvar data = [\n\t\t\t\t\t{\"url\": '', \"label\": state[0].label}\n\t\t\t\t];\n\t\t\t\t$rootScope.$broadcast('sp.update.breadcrumbs', data);\n\t\t\t});\n\t\t});\n\t}\n\n\tc.selectFilter = function(){\n\t\t$timeout(function(){\n\t\t\tc.data.interactive_filter_group = c.selectorGroup || '0';\n\t\t\tc.data.interactive_filter = c.selectorState || 'ANYTHING';\n\t\t\tc.server.update();\n\t\t});\n\t}\n\n\tc.setRecord = function(item){\n\t\tvar data = {\n\t\t\t\"sys_id\": item.sys_id,\n\t\t\t\"table\": item.table\n\t\t};\n\t\t$rootScope.$broadcast('selected.record', data);\n\t\tc.setBreadcrumbs(item);\n\t}\n\n\n\tc.setBreadcrumbs = function(item){\n\t\tvar state = c.data.filter_group.filter(function(item, index){\n\t\t\treturn item.value === c.selectorGroup;\n\t\t});\t\n\t\tvar data = [\n\t\t\t{\"url\": '', \"label\": state[0].label},\n\t\t\t{\"url\": item.sys_id, \"label\": item.title}\n\t\t];\n\t\t$rootScope.$broadcast('sp.update.breadcrumbs', data);\n\n\t}\n\n\n\n};",
            "readonly": false,
            "hint": "",
            "name": "client_script",
            "attributes": {
                "client_script": "true"
            },
            "choice": 0,
            "value": "api.controller=function($timeout, $rootScope, $scope, spUtil) {\n\t/* widget controller */\n\tvar c = this;\n\n\tc.selectOptions = {\n\t\thideSearch: true,\n\t\tallowClear: true\n\t};\n\n\tc.init = function(){\n\t\tc.selectorGroup = c.data.group_selected || 0;\n\t\tc.selectorState = null;\n\t\tif(c.data.group_selected)\n\t\t\tc.selectFilter();\n\t}\n\n\tspUtil.recordWatch($scope, c.data.table, c.options.filter, function(name) {\n\t\tc.server.update();\n\t});\n\n\tc.selectFilterGroup = function(){\n\t\t$timeout(function(){\n\t\t\tc.data.interactive_filter_group = c.selectorGroup || '0';\n\t\t\tc.data.interactive_filter = c.selectorState || 'ANYTHING';\n\t\t\tc.server.update().then(function(){\n\t\t\t\tc.selectorState = null;\n\t\t\t\tvar state = c.data.filter_group.filter(function(item, index){\n\t\t\t\t\treturn item.value === c.selectorGroup;\n\t\t\t\t});\t\n\t\t\t\tvar data = [\n\t\t\t\t\t{\"url\": '', \"label\": state[0].label}\n\t\t\t\t];\n\t\t\t\t$rootScope.$broadcast('sp.update.breadcrumbs', data);\n\t\t\t});\n\t\t});\n\t}\n\n\tc.selectFilter = function(){\n\t\t$timeout(function(){\n\t\t\tc.data.interactive_filter_group = c.selectorGroup || '0';\n\t\t\tc.data.interactive_filter = c.selectorState || 'ANYTHING';\n\t\t\tc.server.update();\n\t\t});\n\t}\n\n\tc.setRecord = function(item){\n\t\tvar data = {\n\t\t\t\"sys_id\": item.sys_id,\n\t\t\t\"table\": item.table\n\t\t};\n\t\t$rootScope.$broadcast('selected.record', data);\n\t\tc.setBreadcrumbs(item);\n\t}\n\n\n\tc.setBreadcrumbs = function(item){\n\t\tvar state = c.data.filter_group.filter(function(item, index){\n\t\t\treturn item.value === c.selectorGroup;\n\t\t});\t\n\t\tvar data = [\n\t\t\t{\"url\": '', \"label\": state[0].label},\n\t\t\t{\"url\": item.sys_id, \"label\": item.title}\n\t\t];\n\t\t$rootScope.$broadcast('sp.update.breadcrumbs', data);\n\n\t}\n\n\n\n};",
            "max_length": 8000,
            "ed": {
                "name": "client_script"
            }
        },
        "data_table": {
            "sys_mandatory": true,
            "visible": true,
            "dbType": 12,
            "default_value": "sp_instance",
            "label": "Data table",
            "sys_readonly": false,
            "type": "table_name",
            "mandatory": true,
            "displayValue": "sp_instance_table",
            "readonly": false,
            "hint": "",
            "name": "data_table",
            "attributes": {
                "base_table": "sp_instance",
                "base_start": "true"
            },
            "choice": 0,
            "choices": [],
            "value": "sp_instance_table",
            "max_length": 80,
            "ed": {
                "name": "data_table"
            }
        },
        "name": {
            "sys_mandatory": true,
            "visible": true,
            "dbType": 12,
            "label": "Name",
            "sys_readonly": false,
            "type": "translated_field",
            "mandatory": true,
            "displayValue": "DGS: Onboarding Request Filter",
            "readonly": false,
            "hint": "",
            "name": "name",
            "attributes": {},
            "choice": 0,
            "value": "DGS: Onboarding Request Filter",
            "max_length": 40,
            "ed": {
                "name": "name"
            }
        },
        "sys_scope": {
            "sys_mandatory": false,
            "visible": true,
            "table_attributes": {
                "metadata_link_exempt": "true"
            },
            "dbType": 12,
            "label": "Application",
            "sys_readonly": true,
            "type": "reference",
            "mandatory": false,
            "refTable": "sys_scope",
            "reference_type": "table",
            "displayValue": "Global",
            "readonly": true,
            "hint": "Application containing this record",
            "name": "sys_scope",
            "attributes": {
                "encode_utf8": "false",
                "list_force_default": "true",
                "readonly_clickthrough": "true",
                "ignore_filter_on_new": "true"
            },
            "reference_key": "sys_id",
            "readonlyClickthrough": true,
            "choice": 0,
            "value": "global",
            "max_length": 32,
            "ed": {
                "reference": "sys_scope",
                "searchField": "name",
                "defaultOperator": "STARTSWITH",
                "name": "sys_scope"
            }
        },
        "id": {
            "sys_mandatory": false,
            "visible": true,
            "dbType": 12,
            "label": "ID",
            "sys_readonly": false,
            "type": "string",
            "mandatory": false,
            "displayValue": "dgs__onboarding_request_filter",
            "readonly": false,
            "hint": "Identifier for $sp.embedWidget()",
            "name": "id",
            "attributes": {
                "edge_encryption_enabled": "true"
            },
            "choice": 0,
            "value": "dgs__onboarding_request_filter",
            "max_length": 40,
            "ed": {
                "name": "id"
            }
        },
        "field_list": {
            "sys_mandatory": false,
            "visible": true,
            "dependentField": "data_table",
            "dbType": -1,
            "label": "Fields",
            "sys_readonly": false,
            "type": "field_list",
            "mandatory": false,
            "displayValue": "table",
            "readonly": false,
            "hint": "",
            "name": "field_list",
            "attributes": {
                "is_multi_text": "false"
            },
            "choice": 0,
            "value": "table",
            "max_length": 1000,
            "ed": {
                "dependent_value": "sp_instance_table",
                "name": "field_list"
            }
        },
        "controller_as": {
            "sys_mandatory": false,
            "visible": true,
            "dbType": 12,
            "label": "controllerAs",
            "sys_readonly": false,
            "type": "string",
            "mandatory": false,
            "displayValue": "c",
            "readonly": false,
            "hint": "Identifier name for a reference to the controller in the directive's scope",
            "name": "controller_as",
            "attributes": {
                "edge_encryption_enabled": "true"
            },
            "choice": 0,
            "value": "c",
            "max_length": 100,
            "ed": {
                "name": "controller_as"
            }
        }
    }
}